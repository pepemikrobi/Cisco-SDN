{
	"info": {
		"_postman_id": "0a03d34d-bef0-4af9-8ffa-74cdd680cf34",
		"name": "Cisco SDA & DNA Center Workshop collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1089720"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWRtZWVuOXNpc2tv"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/system/api/v1/auth/token",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"system",
								"api",
								"v1",
								"auth",
								"token"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Get device count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/interface/count",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"interface",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device count Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/interface/count",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"interface",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get devices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/network-device",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"network-device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device by IP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"DEVICE_UUID\", jsonData.response.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/api/v1/network-device/ip-address/10.11.127.1",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"network-device",
								"ip-address",
								"10.11.127.1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Latest device config status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWRtZWVuOXNpc2tv"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/api/v2/data/device-config-status?isLatest=true",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"device-config-status"
							],
							"query": [
								{
									"key": "isLatest",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "https://{{dnac}}/api/v1/interface",
							"protocol": "https",
							"host": [
								"{{dnac}}"
							],
							"path": [
								"api",
								"v1",
								"interface"
							]
						},
						"description": "Example of the /interface API"
					},
					"response": []
				},
				{
					"name": "Get all devices interfaces count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/api/v1/interface/count",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"interface",
								"count"
							]
						},
						"description": "Example of the /interface API"
					},
					"response": []
				},
				{
					"name": "Discover SW3",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"discoveryType\":\"Range\",\r\n  \"preferredMgmtIPMethod\":\"UseLoopBack\",\r\n  \"ipAddressList\":\"10.1{{POD}}.127.3-10.1{{POD}}.127.3\",\r\n  \"ipFilterList\":[],\r\n  \"protocolOrder\":\"ssh\",\r\n  \"cdpLevel\":\"16\",\r\n  \"lldpLevel\":\"16\",\r\n  \"reDiscovery\":true,\r\n  \"globalCredentialIdList\":[\r\n    \"{{CREDENTIALS_CLI_UUID}}\",\r\n    \"{{CREDENTIALS_SNMP_RO_UUID}}\",\r\n    \"{{CREDENTIALS_SNMP_RW_UUID}}\"\r\n  ],\r\n  \"timeout\":\"5\",\r\n  \"retry\":\"3\",\r\n  \"name\":\"SW3 discovery\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/discovery",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"discovery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Discover R1R2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"discoveryType\":\"Range\",\r\n  \"preferredMgmtIPMethod\":\"UseLoopBack\",\r\n  \"ipAddressList\":\"10.1{{POD}}.127.101-10.1{{POD}}.127.102\",\r\n  \"ipFilterList\":[],\r\n  \"protocolOrder\":\"ssh\",\r\n  \"cdpLevel\":\"16\",\r\n  \"lldpLevel\":\"16\",\r\n  \"reDiscovery\":true,\r\n  \"globalCredentialIdList\":[\r\n    \"{{CREDENTIALS_CLI_UUID}}\",\r\n    \"{{CREDENTIALS_SNMP_RO_UUID}}\",\r\n    \"{{CREDENTIALS_SNMP_RW_UUID}}\"\r\n  ],\r\n  \"timeout\":\"5\",\r\n  \"retry\":\"3\",\r\n  \"name\":\"R1R2 discovery\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/discovery",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"discovery"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Site",
			"item": [
				{
					"name": "Get sites",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sites by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"SITE_UUID\", jsonData.response[0].id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v2/site?name=global/Polska/Warszawa/Hector",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v2",
								"site"
							],
							"query": [
								{
									"key": "name",
									"value": "global/Polska/Warszawa/Hector"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete site",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Loopback\":\r\n     {\r\n       \"name\": \"2\"\r\n     }\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/site/{{SITE_UUID}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site",
								"{{SITE_UUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create area",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"SITE_UUID\", jsonData.siteId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\":\"area\",\r\n\t\"site\": {\r\n\t\t\"area\": {\r\n\t\t\t\"name\":\"site51\",\r\n\t\t\t\"parentName\":\"global\"\r\n\t\t}\r\n\t}\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Credentials",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cliCredential\": [\r\n        {\r\n            \"description\": \"POD{{POD}}_CLI_credentials\",\r\n            \"username\": \"cliadmin\",\r\n            \"password\": \"Admin{{POD}}sisko$\",\r\n            \"enablePassword\": \"Admin{{POD}}sisko$\"\r\n        }\r\n    ],\r\n    \"snmpV2cRead\": [\r\n        {\r\n        \"description\": \"SNMP_RO\",\r\n        \"readCommunity\": \"cisco\"\r\n        }\r\n    ],\r\n    \"snmpV2cWrite\": [\r\n        {\r\n        \"description\": \"SNMP_RW\",\r\n        \"writeCommunity\": \"Admin{{POD}}sisko$\"\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v2/global-credential",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v2",
								"global-credential"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"CREDENTIALS_CLI_UUID\", jsonData.response.cliCredential[0].id);\r",
									"postman.setEnvironmentVariable(\"CREDENTIALS_SNMP_RO_UUID\", jsonData.response.snmpV2cRead[0].id);\r",
									"postman.setEnvironmentVariable(\"CREDENTIALS_SNMP_RW_UUID\", jsonData.response.snmpV2cWrite[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v2/global-credential",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v2",
								"global-credential"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Network",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/network",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"network"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Network by site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/network?siteId={{SITE_UUID}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"network"
							],
							"query": [
								{
									"key": "siteId",
									"value": "{{SITE_UUID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IP Pools",
			"item": [
				{
					"name": "Get IP Pools",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/system/api/v1/global-pool",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"system",
								"api",
								"v1",
								"global-pool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IP Pool PODX_POOL_UNDERLAY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"POOL_UNDERLAY_UUID\", jsonData.response[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/api/v2/ippool?ipPoolName=POD{{POD}}_POOL_UNDERLAY",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "POD{{POD}}_POOL_UNDERLAY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IP Pool PODX_POOL_OVERLAY",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"POOL_OVERLAY_UUID\", jsonData.response[0].id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/api/v2/ippool?ipPoolName=POD{{POD}}_POOL_OVERLAY",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "POD{{POD}}_POOL_OVERLAY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IP Pool PODX_POOL6_OVERLAY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"POOL6_OVERLAY_UUID\", jsonData.response[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/global-pool?ipPoolName=POD{{POD}}_POOL6_OVERLAY",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-pool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "POD{{POD}}_POOL6_OVERLAY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IP Pool PODX_POOL_UNDERLAY",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"settings\": {\n    \"ippool\": [\n      {\n        \"ipPoolName\":\"POD{{POD}}_POOL_UNDERLAY\",\n        \"type\": \"Generic\",\n        \"ipPoolCidr\":\"10.1{{POD}}.64.0/18\",\n        \"dhcpServerIps\": [\n          \"10.16.2.3\"\n        ],\n        \"dnsServerIps\": [\n          \"8.8.8.8\"\n        ],\n        \"IpAddressSpace\": \"IPv4\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/global-pool",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-pool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IP Pool PODX_POOL_OVERLAY",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"settings\": {\n    \"ippool\": [\n      {\n        \"ipPoolName\":\"POD{{POD}}_POOL_OVERLAY\",\n        \"type\": \"Generic\",\n        \"ipPoolCidr\":\"10.1{{POD}}.128.0/17\",\n        \"dhcpServerIps\": [\n          \"10.16.2.3\"\n        ],\n        \"dnsServerIps\": [\n          \"8.8.8.8\"\n        ],\n        \"IpAddressSpace\": \"IPv4\"\n      }\n    ]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/global-pool",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-pool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IP Pool PODX_POOL6_OVERLAY",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"settings\": {\n    \"ippool\": [\n      {\n        \"ipPoolName\":\"POD{{POD}}_POOL6_OVERLAY\",\n        \"type\": \"Generic\",\n        \"ipPoolCidr\":\"2001:db8:1{{POD}}::/48\",\n        \"dnsServerIps\": [\n          \"2001:4860:4860::8888\"\n        ],\n        \"IpAddressSpace\": \"IPv6\"\n      }\n    ]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/global-pool",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-pool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reserve IP Pool NET131",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"groupName\":\"NET131\",\r\n\t\"type\":\"lan\",\r\n\t\"_comment\":\"Below enter UUID of site where subnet should be reserved\",\r\n\t\"siteId\":\"{{SITE_UUID}}\",\r\n\t\"ipPools\":[\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv4 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[\"10.16.2.3\"],\r\n\t\t\t\"dnsServerIps\":[\"8.8.8.8\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"10.1{{POD}}.131.1\"],\r\n\t\t\t\"ipPoolCidr\":\"10.1{{POD}}.131.0/24\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv6 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL6_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[],\r\n\t\t\t\"dnsServerIps\":[\"2001:4860:4860::8888\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"2001:db8:1{{POD}}:131::1\"],\r\n\t\t\t\"ipPoolCidr\":\"2001:db8:1{{POD}}:131::/64\",\r\n\t\t\t\"context\":[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"owner\":\"DNAC\",\r\n\t\t\t\t\t\"contextKey\":\"slaacSupport\",\r\n\t\t\t\t\t\"contextValue\":true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/api/v2/ippool/group",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reserve IP Pool NET132",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"groupName\":\"NET132\",\r\n\t\"type\":\"lan\",\r\n\t\"_comment\":\"Below enter UUID of site where subnet should be reserved\",\r\n\t\"siteId\":\"{{SITE_UUID}}\",\r\n\t\"ipPools\":[\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv4 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[\"10.16.2.3\"],\r\n\t\t\t\"dnsServerIps\":[\"8.8.8.8\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"10.1{{POD}}.132.1\"],\r\n\t\t\t\"ipPoolCidr\":\"10.1{{POD}}.132.0/24\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv6 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL6_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[],\r\n\t\t\t\"dnsServerIps\":[\"2001:4860:4860::8888\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"2001:db8:1{{POD}}:132::1\"],\r\n\t\t\t\"ipPoolCidr\":\"2001:db8:1{{POD}}:132::/64\",\r\n\t\t\t\"context\":[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"owner\":\"DNAC\",\r\n\t\t\t\t\t\"contextKey\":\"slaacSupport\",\r\n\t\t\t\t\t\"contextValue\":true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/api/v2/ippool/group",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reserve IP Pool NET133",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"groupName\":\"NET133\",\r\n\t\"type\":\"lan\",\r\n\t\"_comment\":\"Below enter UUID of site where subnet should be reserved\",\r\n\t\"siteId\":\"{{SITE_UUID}}\",\r\n\t\"ipPools\":[\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv4 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[\"10.16.2.3\"],\r\n\t\t\t\"dnsServerIps\":[\"8.8.8.8\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"10.1{{POD}}.133.1\"],\r\n\t\t\t\"ipPoolCidr\":\"10.1{{POD}}.133.0/24\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv6 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL6_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[],\r\n\t\t\t\"dnsServerIps\":[\"2001:4860:4860::8888\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"2001:db8:1{{POD}}:133::1\"],\r\n\t\t\t\"ipPoolCidr\":\"2001:db8:1{{POD}}:133::/64\",\r\n\t\t\t\"context\":[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"owner\":\"DNAC\",\r\n\t\t\t\t\t\"contextKey\":\"slaacSupport\",\r\n\t\t\t\t\t\"contextValue\":true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/api/v2/ippool/group",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reserve IP Pool NET140",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"groupName\":\"NET140\",\r\n\t\"type\":\"lan\",\r\n\t\"_comment\":\"Below enter UUID of site where subnet should be reserved\",\r\n\t\"siteId\":\"{{SITE_UUID}}\",\r\n\t\"ipPools\":[\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv4 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[\"10.16.2.3\"],\r\n\t\t\t\"dnsServerIps\":[\"8.8.8.8\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"10.1{{POD}}.140.1\"],\r\n\t\t\t\"ipPoolCidr\":\"10.1{{POD}}.140.0/24\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv6 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL6_OVERLAY_UUID}}\",\r\n\t\t\t\"dhcpServerIps\":[],\r\n\t\t\t\"dnsServerIps\":[\"2001:4860:4860::8888\"],\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"gateways\":[\"2001:db8:1{{POD}}:140::1\"],\r\n\t\t\t\"ipPoolCidr\":\"2001:db8:1{{POD}}:140::/64\",\r\n\t\t\t\"context\":[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"owner\":\"DNAC\",\r\n\t\t\t\t\t\"contextKey\":\"slaacSupport\",\r\n\t\t\t\t\t\"contextValue\":true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/api/v2/ippool/group",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reserve IP Pool for Borders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "__runsync",
								"value": "True"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"groupName\":\"POD{{POD}}_BORDER_EXT\",\r\n\t\"type\":\"generic\",\r\n\t\"_comment\":\"Below enter UUID of site where subnet should be reserved\",\r\n\t\"siteId\":\"{{SITE_UUID}}\",\r\n\t\"ipPools\":[\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv4 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL_OVERLAY_UUID}}\",\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"ipPoolCidr\":\"10.1{{POD}}.128.0/24\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"_comment\":\"Below enter global IPv6 address pool UUID from which subnets should be reserved\",\r\n\t\t\t\"parentUuid\":\"{{POOL6_OVERLAY_UUID}}\",\r\n\t\t\t\"ipPoolOwner\":\"DNAC\",\r\n\t\t\t\"shared\":true,\r\n\t\t\t\"ipPoolCidr\":\"2001:db8:1{{POD}}:128::/64\",\r\n\t\t\t\"context\":[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"owner\":\"DNAC\",\r\n\t\t\t\t\t\"contextKey\":\"slaacSupport\",\r\n\t\t\t\t\t\"contextValue\":true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/api/v2/ippool/group",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"group"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Border",
			"item": [
				{
					"name": "Border cfg",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic cnNsYXNraTphcTFAV1MuNzg5"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/border-device?deviceManagementIpAddress=10.{{POD}}.127.101",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"border-device"
							],
							"query": [
								{
									"key": "deviceManagementIpAddress",
									"value": "10.{{POD}}.127.101"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Template",
			"item": [
				{
					"name": "Get tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"var tag = jsonData.response.find(e => e.name == 'ISR')\r",
									"console.log(tag.id)\r",
									"postman.setEnvironmentVariable(\"TAG_ISR_UUID\", tag.id)\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/api/v2/tag",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"var tag = jsonData.response.find(e => e.name == 'ISR')\r",
									"console.log(tag.id)\r",
									"postman.setEnvironmentVariable(\"TAG_ISR_UUID\", tag.id)\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/api/v2/tag",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create tag",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\":[\r\n        \"TAG\"\r\n    ],\r\n    \"name\":\"ISR\",\r\n    \"description\":\"\",\r\n    \"dynamicRules\":[]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/api/v2/tag",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v2",
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"TEMPLATE_PROJECT_UUID\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/template-programmer/project?name=Onboarding Configuration",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"template-programmer",
								"project"
							],
							"query": [
								{
									"key": "name",
									"value": "Onboarding Configuration"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"R1R2_template\",\r\n    \"composite\":false,\r\n    \"containingTemplates\":[],\r\n    \"description\":\"\",\r\n    \"deviceTypes\":[{\"productFamily\":\"Routers\",\"productSeries\":\"Cisco 4000 Series Integrated Services Routers\",\"productType\":\"Cisco 4321 Integrated Services Router\"}],\r\n    \"softwareType\":\"IOS-XE\",\r\n    \"softwareVersion\":null,\r\n    \"templateParams\":[\r\n        {\r\n            \"parameterName\":\"pod\",\r\n            \"notParam\":false,\r\n            \"dataType\":\"INTEGER\",\r\n            \"defaultValue\":null,\r\n            \"description\":null,\r\n            \"required\":true,\r\n            \"displayName\":\"Select POD number\",\r\n            \"instructionText\":null,\r\n            \"group\":null,\r\n            \"order\":1,\r\n            \"selection\":{\r\n                \"selectionType\":\"SINGLE_SELECT\",\r\n                \"defaultSelectedValues\":[\"POD1\"],\r\n                \"selectionValues\":{\r\n                    \"POD1\":\"1\",\r\n                    \"POD2\":\"2\",\r\n                    \"POD3\":\"3\",\r\n                    \"POD4\":\"4\",\r\n                    \"POD5\":\"5\"\r\n                },\r\n                \"id\":null\r\n            },\r\n            \"range\":[],\r\n            \"key\":null,\r\n            \"provider\":null,\r\n            \"binding\":\"\",\r\n            \"paramArray\":false,\r\n            \"id\":\"4a2cf4d3-7f8c-4e5e-8fd0-b8221abf031f\"\r\n        },\r\n        {\r\n            \"parameterName\":\"router\",\r\n            \"notParam\":false,\r\n            \"dataType\":\"STRING\",\r\n            \"defaultValue\":null,\r\n            \"description\":null,\r\n            \"required\":true,\r\n            \"displayName\":null,\r\n            \"instructionText\":null,\r\n            \"group\":null,\r\n            \"order\":2,\r\n            \"selection\":null,\r\n            \"range\":[],\r\n            \"key\":null,\r\n            \"provider\":null,\r\n            \"binding\":\"\",\r\n            \"paramArray\":false,\r\n            \"id\":\"64ffa0e0-feab-4fb4-871d-f9228a1fa43c\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/template-programmer/project/{{TEMPLATE_PROJECT_UUID}}/template",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{TEMPLATE_PROJECT_UUID}}",
								"template"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Fabric",
			"item": [
				{
					"name": "Create fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/fabric",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"fabric"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Site to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\",\r\n    \"siteNameHierarchy\": \"Global/Polska/Warszawa/BudynekCIA\"\r\n  }\r\n]\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/fabric-site",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"fabric-site"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add VN to Fabric Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\",\r\n    \"siteNameHierarchy\": \"Global/Polska/Warszawa/BudynekCIA\"\r\n  }\r\n]\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/fabric-site",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"fabric-site"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add R1 to Fabric as CP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"deviceManagementIpAddress\": \"10.1{{POD}}.127.101\",\r\n    \"siteNameHierarchy\": \"Global/Polska/Warszawa/BudynekCIA\"\r\n  }\r\n]\r\n\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/control-plane-device",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"control-plane-device"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add R1 to Fabric as B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"deviceManagementIpAddress\": \"10.1{{POD}}.127.101\",\r\n    \"siteNameHierarchy\": \"Global/Polska/Warszawa/BudynekCIA\",\r\n    \"externalDomainRoutingProtocolName\": \"BGP\",\r\n    \"externalConnectivityIpPoolName\": \"string\",\r\n    \"internalAutonomouSystemNumber\": \"6550{{POD}}\",\r\n    \"borderSessionType\": \"ANYWHERE\",\r\n    \"connectedToInternet\": true,\r\n    \"externalConnectivitySettings\": [\r\n      {\r\n        \"interfaceName\": \"GigabitEthernet0/0/0\",\r\n        \"externalAutonomouSystemNumber\": \"65001\",\r\n        \"l3Handoff\": [\r\n          {\r\n            \"virtualNetwork\": {\r\n              \"virtualNetworkName\": \"VN1\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]  \r\n  }\r\n]\r\n\r\n"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/border-device",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"border-device"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fabric info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/fabric",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"fabric"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CP node",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/control-plane-device?deviceIPAddress=10.15.127.101",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"control-plane-device"
							],
							"query": [
								{
									"key": "deviceIPAddress",
									"value": "10.15.127.101"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get B R1 node",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/border-device?deviceIPAddress=10.1{{POD}}.127.101",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"border-device"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "deviceIPAddress",
									"value": "10.1{{POD}}.127.101"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VNs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/border-device?deviceIPAddress=10.15.127.101",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"border-device"
							],
							"query": [
								{
									"key": "deviceIPAddress",
									"value": "10.15.127.101"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IP Pool for VN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/virtualnetwork/ippool?ipPoolName=NET131&virtualNetworkName=VN1",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"virtualnetwork",
								"ippool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "NET131"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "virtualNetworkName",
									"value": "VN1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add NET131 Pool to VN1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"virtualNetworkName\" : \"VN1\",\r\n  \"ipPoolName\" : \"NET131\",\r\n  \"authenticationPolicyName\" : \"10_1{{POD}}_131_0-VN1\",\r\n  \"trafficType\" : \"DATA\",\r\n  \"scalableGroupName\" : \"\",\r\n  \"isL2FloodingEnabled\" : false,\r\n  \"isThisCriticalPool\" : false\r\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/virtualnetwork/ippool?ipPoolName=NET131&virtualNetworkName=VN1",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"virtualnetwork",
								"ippool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "NET131"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "virtualNetworkName",
									"value": "VN1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add NET132 Pool to VN1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"virtualNetworkName\" : \"VN1\",\r\n  \"ipPoolName\" : \"NET132\",\r\n  \"authenticationPolicyName\" : \"10_1{{POD}}_132_0-VN1\",\r\n  \"trafficType\" : \"DATA\",\r\n  \"scalableGroupName\" : \"\",\r\n  \"isL2FloodingEnabled\" : false,\r\n  \"isThisCriticalPool\" : false\r\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/virtualnetwork/ippool?ipPoolName=NET131&virtualNetworkName=VN1",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"virtualnetwork",
								"ippool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "NET131"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "virtualNetworkName",
									"value": "VN1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add NET133 Pool to VN2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"virtualNetworkName\" : \"VN2\",\r\n  \"ipPoolName\" : \"NET133\",\r\n  \"authenticationPolicyName\" : \"10_1{{POD}}_133_0-VN2\",\r\n  \"trafficType\" : \"DATA\",\r\n  \"scalableGroupName\" : \"\",\r\n  \"isL2FloodingEnabled\" : false,\r\n  \"isThisCriticalPool\" : false\r\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/virtualnetwork/ippool?ipPoolName=NET131&virtualNetworkName=VN1",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"virtualnetwork",
								"ippool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "NET131"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "virtualNetworkName",
									"value": "VN1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add NET140 Pool to VN1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"virtualNetworkName\" : \"VN1\",\r\n  \"ipPoolName\" : \"NET140\",\r\n  \"authenticationPolicyName\" : \"10_1{{POD}}_140_0-VN1\",\r\n  \"trafficType\" : \"VOICE\",\r\n  \"scalableGroupName\" : \"\",\r\n  \"isL2FloodingEnabled\" : false,\r\n  \"isThisCriticalPool\" : false\r\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/virtualnetwork/ippool?ipPoolName=NET131&virtualNetworkName=VN1",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"virtualnetwork",
								"ippool"
							],
							"query": [
								{
									"key": "ipPoolName",
									"value": "NET131"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "virtualNetworkName",
									"value": "VN1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SW1 Port 1/0/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/hostonboarding/user-device?interfaceName=GigabitEthernet1/0/1&device-ip=10.15.127.1",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"hostonboarding",
								"user-device"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "interfaceName",
									"value": "GigabitEthernet1/0/1"
								},
								{
									"key": "device-ip",
									"value": "10.15.127.1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign NET131 to SW1 Port 1/0/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"siteNameHierarchy\" : \"Global/Polska/Warszawa/Hector\",\r\n  \"deviceManagementIpAddress\" : \"10.1{{POD}}.127.1\",\r\n  \"interfaceName\" : \"GigabitEthernet1/0/1\",\r\n  \"dataIpAddressPoolName\" : \"NET131\",\r\n  \"voiceIpAddressPoolName\" : \"NET140\",\r\n  \"authenticateTemplateName\" : \"No Authentication\"\r\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/hostonboarding/user-device",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"hostonboarding",
								"user-device"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply Auth Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"siteNameHierarchy\" : \"Global/Polska/Warszawa/Hector\",\r\n  \"authenticateTemplateName\": \"NO AUTHENTICATION\"\r\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/authentication-profile",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"authentication-profile"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fabric site info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/fabric-site?siteNameHierarchy=Global/Polska/Warszawa/Budynek%20CIA",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"fabric-site"
							],
							"query": [
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								},
								{
									"key": "siteNameHierarchy",
									"value": "Global/Polska/Warszawa/Budynek%20CIA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get B R2 node",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"fabricName\": \"POD{{POD}}_Fabric\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/business/sda/border-device?deviceIPAddress=10.15.127.101",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"business",
								"sda",
								"border-device"
							],
							"query": [
								{
									"key": "deviceIPAddress",
									"value": "10.15.127.101"
								},
								{
									"key": "Content-",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Assurance",
			"item": [
				{
					"name": "Overall Client Health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/client-health",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"client-health"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/assurance/v1/host",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"starttime\": 1633981725000, \r\n    \"endtime\": 1633981755000\r\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/api/assurance/v1/host",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"assurance",
								"v1",
								"host"
							]
						}
					},
					"response": []
				},
				{
					"name": "site-health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/site-health",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site-health"
							]
						}
					},
					"response": []
				},
				{
					"name": "device-health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/device-health",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"device-health"
							]
						}
					},
					"response": []
				},
				{
					"name": "client-health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/client-health",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"client-health"
							]
						}
					},
					"response": []
				},
				{
					"name": "client-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/client-health",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"client-health"
							]
						}
					},
					"response": []
				},
				{
					"name": "client-enrichment-details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/client-enrichment-details",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"client-enrichment-details"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Client Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/api/assurance/v1/client-detail?macAddress=00:00:2A:01:00:3F",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"assurance",
								"v1",
								"client-detail"
							],
							"query": [
								{
									"key": "macAddress",
									"value": "00:00:2A:01:00:3F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Site Health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/site-health",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site-health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Issues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "entity_type",
								"value": "mac_address",
								"type": "text"
							},
							{
								"key": "entity_value",
								"value": "00:00:2A:01:00:3F",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/issues",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"issues"
							],
							"query": [
								{
									"key": "Content-",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Command run",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "entity_type",
								"value": "mac_address",
								"type": "text"
							},
							{
								"key": "entity_value",
								"value": "00:00:2A:01:00:3F",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/issues",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"issues"
							],
							"query": [
								{
									"key": "Content-",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Issue Enrichment Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "entity_type",
								"value": "issue_id",
								"type": "text"
							},
							{
								"key": "entity_value",
								"value": "162623f0-45a6-4f5c-942e-b2d34388902d",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/issue-enrichment-details",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"issue-enrichment-details"
							],
							"query": [
								{
									"key": "Content-",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Client Enrichment Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"console.log(\"here\");",
									"console.log(data.response);",
									"if (data.response) {",
									"    for (i = 0; i < data.response.length; i++) { ",
									"        if (data.response[i].timeType == 'GLOBAL'){",
									"            postman.setEnvironmentVariable(\"GLOBALtime\", data.response[i].time  );",
									"        }",
									"        if (data.response[i].timeType == 'CLIENT'){",
									"            postman.setEnvironmentVariable(\"CLIENTtime\", data.response[i].time  );",
									"        }",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{HOST}}/dna/intent/api/v1/client-enrichment-details",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"client-enrichment-details"
							],
							"query": [
								{
									"key": "Content-",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{PASSWORD}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{USERNAME}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({",
					"    key: \"X-Auth-Token\", ",
					"    value: \"{{TOKEN}}\"",
					"})"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}